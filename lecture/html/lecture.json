{
    "lecture_title": "[1-1] HTML 개요,[1-2] HTML 기초,[1-3] HTML 기본 구조,[1-4] HTML 요소 구조,[2-1] HTML 텍스트 요소,[2-2] 단락 (Paragraph),[2-3] 서식,[2-4] 인용구", 
    "[1-1] HTML 개요": "HTML은 웹 페이지를 만드는 데 사용하는 언어이며 매우 쉽게 배울 수 있습니다.  꿣모든 태그는 미리 정의되어 있으며, 각각의 태그와 속성을 사용하기만 하면 됩니다.  꿣HTML 수업 시작 => [Try it!]  여러분이 직접 코드를 변경하고, 그 결과를 확인할 수 있는 에디터가 준비되어 있습니다.",
    "[1-1] HTML 개요_ex": "<!DOCTYPE html>꿣<html lang='ko'>꿣꿣<head>꿣    <meta charset='UTF-8'>꿣    <title>HTML Intro</title>꿣</head>꿣꿣<body>꿣꿣    <h1>여러분을 환영합니다!!</h1>꿣</body>꿣꿣</html>",
    "[1-2] HTML 기초": "[1-2]HTML 태그(tag) HTML 태그는 태그 이름을 꺾쇠 괄호(<>)로 감싸서 표현합니다.꿣문법꿣1. <태그이름> 시작 태그 꿣2. </태그이름>종료 태그꿣HTML 태그는 보통 시작 태그(start tag, opening tag)와 종료 태그(end tag, closing tag)의 한 쌍으로 구성됩니다.종료 태그는 시작 태그와 전부 똑같지만, 태그 이름 앞에 슬래시(/)가 존재합니다.태그에 따라 시작 태그만 있고 종료 태그가 없는 태그도 존재합니다.꿣<img> <br> <hr> 등과 같이 종료 태그 없이 시작 태그만을 가지는 태그를 빈 태그(empty tag)라고 합니다. 버전    년도    DOCTYPE 및 설명꿣HTML 1.0    1991    팀 버나스리(Tim Berners-Lee)가 발표한 최초의 HTML꿣HTML 2.0    1995    국제 표준으로 제정된 최초의 HTML꿣HTML 3.2    1997    W3C에 의해 제정된 최초의 HTML꿣HTML 4.01    1999꿣<!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.01//EN'꿣꿣'http://www.w3.org/TR/html4/strict.dtd%22%3E꿣XHTML 1.0    2000꿣<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN'꿣꿣'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd%22%3E꿣HTML 5    2014    <!DOCTYPE html>'HTML의 최신 버전인 HTML5에 대한 더 자세한 정보를 원한다면, W3C 공식 사이트를 방문하여 확인할 수 있습니다.꿣W3C HTML5 : W3C Recommendation 28 October 2014 =>[https://www.w3.org/TR/html5/]꿣W3C꿣W3C는 World Wide Web Consortium의 약자입니다.꿣꿣W3C는 월드 와이드 웹(WWW)을 위한 표준을 제정하고 관리하는 중립적인 기관입니다.꿣꿣꿣이러한 W3C가 관리하는 대표적인 웹 표준은 다음과 같습니다.꿣꿣1. HTML꿣꿣2. CSS꿣꿣3. DOM꿣꿣4. SVG꿣꿣5. XHTML꿣꿣6. XML",
    "[1-2] HTML 기초_ex": "<h1>제목 1</h1>꿣꿣<h2>제목 2</h2>꿣꿣<h3>제목 3</h3>꿣꿣<p>단락 1</p>꿣꿣<p>단락 2</p>",
    "[1-3] HTML 기본 구조": "[1-3]HTML 기본 구조꿣HTML 기본 구조꿣다음은 HTML 문서의 기본적인 구조를 보여주는 그림입니다.<!DOCTYPE html> : 현재 문서가 HTML5 문서임을 명시합니다.꿣꿣<html> : HTML 문서의 루트(root) 요소를 정의합니다.꿣꿣 꿣<head> : HTML 문서의 메타데이터(metadata)를 정의합니다.꿣꿣- 메타데이터(metadata)란 HTML 문서에 대한 정보(data)로 웹 브라우저에는 직접적으로 표현되지 않는 정보를 의미합니다.꿣- 이러한 메타데이터는 <title>, <style>, <meta>, <link>, <script>, <base>태그 등을 이용하여 표현할 수 있습니다.꿣꿣꿣꿣<title> : HTML 문서의 제목(title)을 정의하며, 다음과 같은 용도로 사용됩니다.꿣꿣- 웹 브라우저의 툴바(toolbar)에 표시됩니다. 꿣꿣- 웹 브라우저의 즐겨찾기(favorites)에 추가할 때 즐겨찾기의 제목이 됩니다.꿣꿣 - 검색 엔진의 결과 페이지에 제목으로 표시됩니다.꿣꿣꿣<body> : 웹 브라우저를 통해 보이는 내용(content) 부분입니다.꿣꿣꿣<h1> ~ <h6> : 제목(heading)을 나타냅니다.꿣꿣꿣꿣<p> : 단락(paragraph)을 나타냅니다.", 
    "[1-3] HTML 기본 구조_ex": "예제가 없습니다.",
    "[1-4] HTML 요소 구조": "HTML 요소(element)는 여러 속성을 가질 수 있으며, 이러한 속성(attribute)은 해당 요소에 대한 추가적인 정보를 제공합니다.꿣또한, HTML 요소는 시작 태그로 시작해서 종료 태그로 끝납니다. 꿣속성은 HTML 요소 중에서도 언제나 시작 태그 내에서만 정의되며, 속성 이름과 속성값(value)으로 표현됩니다.꿣꿣문법꿣<태그이름 속성이름='속성값'>꿣속성 이름은 언제나 소문자로 작성하자!꿣HTML5 표준에서는 속성 이름에 대소문자를 구분하지 않고 있습니다.꿣꿣하지만 W3C에서는 속성 이름을 사용할 때 될 수 있으면 소문자로 작성하도록 권장하고 있습니다.꿣또한, XHTML에서는 속성 이름을 더욱 엄격하게 소문자로만 사용해야 합니다. 꿣위의 예제와 같이 속성값에 띄어쓰기가 들어가게 되면, 반드시 따옴표를 사용해야 정확한 값을 저장할 수 있습니다.꿣꿣속성값을 감쌀 때는 보통 큰따옴표('')가 사용되며, 작은따옴표(**)도 사용할 수 있습니다.꿣꿣<img>태그의 alt 속성은 이미지를 불러올 수 없는 상황에서 이미지 대신 보이는 문자열을 설정할 수 있습니다. ",
    "[1-4] HTML 요소 구조_ex": "<img src='quotes.jpg' alt='이미지가 없어요'>꿣꿣<img src='quotes.jpg' alt=이미지가 없어요>",
    "[2-1] HTML 텍스트 요소" : "[2-1] HTML 텍스트 요소꿣제목꿣제목(Heading)꿣HTML은 제목을 표현할 수 있는 다양한 크기의 <h>태그를 제공합니다.꿣 꿣가장 큰 <h1>태그부터 가장 작은 <h6>태그까지 다양한 크기로 제목을 표현할 수 있습니다. <h>태그의 위아래로는 약간의 여백이 자동으로 삽입됩니다.꿣 꿣꿣이런 <h>태그는 제목의 표현이라는 기능 외에도 또 다른 중요한 역할을 하고 있습니다.꿣꿣여러 검색엔진은 각 웹 사이트의 내용을 바로 이 <h>태그를 이용하여 키워드를 수집하고, 그 내용을 파악합니다.꿣꿣따라서 HTML 문서에 포함되는 제목은 <h>태그로 작성해야만 검색엔진에 의해 제대로 검색될 확률을 높일 수 있습니다.꿣꿣꿣HTML 문서의 제목에 해당하는 부분을 <big>태그나 <bold>태그를 사용하여 표현하지 않도록 합니다.꿣종료 태그를 잊지 맙시다!꿣대부분의 웹 브라우저는 종료 태그를 사용하지 않더라도 다음 예제와 같이 HTML 문서를 제대로 표현해 줍니다꿣꿣<h2>종료 태그가 없어도 표현이 잘 될까요?꿣꿣꿣하지만 종료 태그가 없으면 예상치 못한 오류나 결과가 발생할 수도 있습니다.꿣꿣또한, XHTML이나 XML과 같은 문법이 엄격한 언어에서는 종료 태그의 유무를 엄격하게 검사합니다.꿣꿣따라서 가급적 종료 태그를 빠트리지 말고 코드를 작성하는 것이 좋습니다.",
    "[2-1] HTML 텍스트 요소_ex": "<h1>제목1의 크기입니다!</h1>꿣<h2>제목2의 크기입니다!</h2>꿣<h3>제목3의 크기입니다!</h3>꿣<h4>제목4의 크기입니다!</h4>꿣<h5>제목5의 크기입니다!</h5>꿣<h6>제목6의 크기입니다!</h6>",
    "[2-2] 단락 (Paragraph)":"단락이란 내용상 끊어서 구분할 수 있는 하나하나의 부분을 의미하며, 문단이라고도 부릅니다.꿣HTML에서는 <p>태그를 이용하여 이러한 단락을 표현합니다.꿣꿣<p>태그의 위아래로는 약간의 여백(margin)이 자동으로 삽입됩니다.꿣띄어쓰기와 줄 나누기꿣HTML 코드에서 띄어쓰기나 줄 나누기를 여러 번 하더라도 웹 브라우저를 통해 나타나는 화면에는 전혀 영향을 주지 못합니다.꿣웹 브라우저는 여러 번의 띄어쓰기나 줄 나누기를 오직 하나의 띄어쓰기나 줄로만 인식하기 때문입니다.꿣꿣꿣다음 예제는 웹 페이지에 여러 번의 띄어쓰기와 줄 나누기를 표현하기 위해 작성한 예제입니다.꿣꿣꿣위의 예제는 여러 번의 띄어쓰기와 줄 나누기를 표현하고자 <p>태그를 이용합니다.꿣꿣하지만 <p>태그 내에서 작성된 여러 번의 띄어쓰기와 줄 나누기는 오직 하나의 띄어쓰기로만 표현됩니다.꿣꿣꿣<br>태그(break line)를 사용하면 새로운 단락을 만들지 않고도 줄을 나눌 수 있습니다.꿣꿣이러한 <br>태그는 종료 태그가 없는 빈 태그(empty tag)입니다.꿣꿣꿣텍스트(text) 서식 미리 정의하꿣HTML 코드에서 작성한 텍스트 서식을 그대로 표현하려면 <pre>태그를 사용해야 합니다.꿣꿣<pre>태그(preformatted text) 내에 작성된 텍스트의 모든 띄어쓰기와 줄 나누기는 웹 브라우저에 그대로 표현됩니다.꿣꿣<pre>태그 내에 작성된 텍스트의 글꼴(font)은 고정폭 글꼴(fixed-width font)로 자동변환됩니다.꿣수평 가로 구분선꿣단락을 나눌 때나 내용상의 구분을 표현하고자 할 때 수평 가로 구분선을 사용합니다.꿣꿣이렇게 사용되는 수평 가로 구분선을 HTML 코드에서는 <hr>태그(horizontal rule)로 간단하게 만들 수 있습니다.",
    "[2-2] 단락 (Paragraph)_ex": "<h1>제목1의 크기입니다!</h1>꿣<h2>제목2의 크기입니다!</h2>꿣<h3>제목3의 크기입니다!</h3>꿣<p>여기서부터 단락입니다.꿣꿣꿣<p>꿣꿣줄을 나누고 싶어서꿣꿣이렇게 줄을 나눠봤습니다.꿣꿣꿣과연     그대로     출력이     될까요?꿣</p>꿣궗꿣<p>꿣꿣줄을 나누고 싶어서<br>꿣이렇게 줄을 나눠봤습니다.<br>꿣<br>꿣과연     그대로     출력이     될까요? 꿣</p> 꿣꿣꿣<pre>꿣줄을 나누고 싶어서꿣이렇게 줄을 나눠봤습니다.꿣과연     그대로     출력이     될까요?꿣</pre>꿣꿣꿣<p>저는 하나의 단락입니다.</p>꿣<hr>꿣<p>저는 하나의 단락입니다.</p>꿣<hr>꿣<p>저는 하나의 단락입니다.</p>",
    "[2-3] 서식": "서식(Formatting)꿣HTML은 텍스트(text)에 다양한 효과를 주는 여러 태그(tag)를 제공합니다.꿣꿣강조 효과꿣HTML 문서에서 텍스트를 굵게 표현하고 싶을 때에는 <b>태그(bold text)나 <strong>태그를 사용하면 됩니다. 꿣<b>태그는 단순히 화면의 텍스트를 굵게 표현해 줍니다.꿣꿣하지만 <strong>태그는 텍스트를 굵게 표현해줄 뿐만 아니라 그 내용이 중요하다는 의미도 함께 포함해 줍니다.꿣꿣꿣HTML 문서에서 이탤릭체를 표현하고 싶을 때에는 <i>태그(italic text)나 <em>태그(emphasized text)를 사용합니다.꿣<i>태그는 단순히 화면의 텍스트를 이탤릭체로 표현해 줍니다.꿣하지만 <em>태그는 텍스트를 이탤릭체로 변환해줄 뿐만 아니라 그 내용이 중요하다는 의미도 함께 포함해 줍니다.꿣꿣검색엔진은 <strong>태그나 <em>태그를 사용하여 강조된 텍스트를 더 중요하게 인식합니다.꿣하이라이팅 효과꿣<mark>태그는 텍스트에 하이라이팅(highlighting) 효과를 적용시켜 줍니다. 꿣꿣삭제 효과꿣<del>태그(delete)는 텍스트 중앙에 가로줄을 만들어 마치 텍스트를 지운 것과 같은 효과를 내줍니다.꿣<ins>태그(insert)는 텍스트 밑에 가로줄을 만들어 마치 빈칸에 텍스트를 삽입한 것과 같은 효과를 내줍니다.꿣꿣위첨자와 아래첨자 효과꿣위첨자는 <sup>태그(superscript)를 사용하여, 아래첨자는 <sub>태그(subscript)를 사용하여 각각 표현할 수 있습니다.",
    "[2-3] 서식_ex": "<p><b>'이 부분'</b>은 단순히 글씨가 굵은 부분이에요!</p>꿣꿣<p><strong>'이 부분'</strong>은 중요한 부분이라서 굵게 표현됐어요!</p>꿣꿣<p><i>'이 부분'</i>은 단순히 글씨가 이탤릭체인 부분이에요!</p>꿣꿣<p><em>'이 부분'</em>은 중요한 부분이라서 이탤릭체로 표현됐어요!</p>꿣꿣<p><mark>'이 부분'</mark>만 하이라이팅하고 싶어요.</p>꿣꿣<p><ins>'밑줄 친 부분'</ins>에 들어갈 알맞은 말을 고르세요.</p>꿣꿣<p>X<sup>2</sup> + Y<sup>3</sup> = Z</p>꿣꿣<p>물을 나타내는 화학식은 H<sub>2</sub>O 입니다.</p>",
    "[2-4] 인용구": "인용구(Quotation)꿣HTML에서 인용구를 표현하는 방법은 다음과 같이 두 가지로 나뉩니다.꿣꿣 꿣꿣1. 짧은 인용구꿣꿣2. 블록 인용구꿣꿣짧은 인용구꿣짧은 인용구는 <q>태그(quotation)를 사용하여 표현할 수 있으며, 자동으로 앞뒤에 큰따옴표가 붙습니다. 꿣꿣블록 인용구꿣꿣길이가 긴 인용문은 <blockquote>태그(block quatation)를 사용하여 표현할 수 있습니다.꿣<blockquote>태그는 이러한 인용 부분을 별도의 단락으로 구분하여 나타냅니다. 꿣꿣축약형 표현꿣HTML에서 용어의 축약형을 표현하기 위해서는 <abbr>태그(abbreviation)를 사용합니다.꿣<abbr>태그 위에 마우스를 위치시키면 title 속성에 명시한 용어의 원형이 나타납니다.꿣꿣주소 표현꿣<address>태그를 사용하면 HTML에서 주소를 표현할 수 있습니다.꿣이러한 주소는 이탤릭체로 표현되며, 위아래로 약간의 공백이 자동으로 삽입됩니다.",
    "[2-4] 인용구_ex": "<p>HTML의 정의는꿣<q>웹 페이지를 만들기 위한 하이퍼텍스트 마크업 언어</q>꿣입니다.</p>꿣꿣꿣<p>HTML의 정의</p>꿣꿣<blockquote>꿣인터넷 서비스의 하나인 월드 와이드 웹을 통해 볼 수 있는 문서를 만들 때 사용하는 프로그래밍 언어의 한 종류이다.꿣</blockquote>꿣꿣꿣<p><strong><abbr title='HyperText Markup Language 5'>HTML5</abbr></strong>꿣꿣꿣<address>꿣서울특별시<br>꿣강남구 테헤란로꿣</address>"
}